<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PD2Launcherv2.CustomControl">

    <Style x:Key="TransparentButtonWithHighlight" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{StaticResource BlizzHeavy}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource GoldBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="0,0,0,20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      TextElement.Foreground="{TemplateBinding Foreground}"
                                      TextElement.FontFamily="{TemplateBinding FontFamily}"
                                      TextElement.FontSize="{TemplateBinding FontSize}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource GoldLighterBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HyperlinkMouseOverStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{StaticResource GoldBrush}"/>
        <Setter Property="FontSize" Value="18"/>
        <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Foreground" Value="{StaticResource GoldLighterBrush}" />
        </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="Transparent" BorderThickness="1">
                        <Rectangle Margin="2" Stroke="Transparent" StrokeThickness="1"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Image Button -->

    <Style TargetType="{x:Type local:CustomImageButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomImageButton}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Image x:Name="img" Source="{Binding NormalImageSource, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Fill"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="img" Property="Source" Value="{Binding PressedImageSource, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomColorChangeButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource GoldBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource BlizzMedium}" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="0,0,0,50" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource GoldBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Change background when mouse hovers over -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource GoldLighterBrush}" />
                        </Trigger>
                        <!-- Ensure the IsPressed effect shows even with IsMouseOver -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ShakoBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Close Button -->
    <Style x:Key="CloseButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource GoldBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource BlizzHeavy}"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ShakoBrush}" />
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="BorderThickness" Value="2.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomVerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <RepeatButton Grid.Row="0" Command="ScrollBar.LineUpCommand" 
                                  Content="UP" 
                                  Background="Transparent"
                            Foreground="{StaticResource GoldBrush}" 
                                  Width="18" Height="18">
                            <RepeatButton.ContentTemplate>
                                <DataTemplate>
                                    <Image Source="/Resources/Images/thin_prev.jpg"/>
                                </DataTemplate>
                            </RepeatButton.ContentTemplate>
                        </RepeatButton>
                        <Track Grid.Row="1" Name="PART_Track" IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Background="{StaticResource GoldBrush}" BorderBrush="Transparent" Foreground="Black"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Grid.Row="2" Command="ScrollBar.LineDownCommand" 
                                  Content="DOWN" 
                                  Background="Transparent"
                            Foreground="{StaticResource GoldBrush}" 
                                  Width="18" Height="18">
                            <RepeatButton.ContentTemplate>
                                <DataTemplate>
                                    <Image Source="/Resources/Images/thin_next.jpg"/>
                                </DataTemplate>
                            </RepeatButton.ContentTemplate>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CustomListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Foreground" Value="{StaticResource GoldBrush}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" Background="{TemplateBinding Background}"
                        Padding="2" SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ShakoBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomNewsListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Foreground" Value="{StaticResource SoftWhite}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" Background="{TemplateBinding Background}"
                    Padding="2" SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox" x:Key="CustomCheckBoxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Image Name="CheckImage" Width="20" Height="20" Source="pack://application:,,,/Resources/Images/checkbox_unchecked.png"/>
                        <ContentPresenter Margin="5,0,0,0" VerticalAlignment="Center"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckImage" Property="Source" Value="pack://application:,,,/Resources/Images/checkbox_checked.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="RadioButton" x:Key="CustomRadioButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <StackPanel Orientation="Horizontal">
                        <Image Name="RadioImage" Width="20" Height="20"
                           Source="pack://application:,,,/Resources/Images/checkbox_unchecked.png"/>
                        <ContentPresenter Margin="5,0,0,0" VerticalAlignment="Center"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="RadioImage" Property="Source"
                                Value="pack://application:,,,/Resources/Images/checkbox_checked.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CustomTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource GoldBrush}"/>
        <Setter Property="Background" Value="#FF333333"/>
        <Setter Property="BorderBrush" Value="{StaticResource GoldBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Width" Value="175"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="4"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="{StaticResource BlizzLight}"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource GoldLighterBrush}"/>
                <Setter Property="BorderThickness" Value="2"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ShakoBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Foreground" Value="{StaticResource GoldBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource BlizzHeavy}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="#FF333333"/>
        <Setter Property="BorderBrush" Value="{StaticResource GoldBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0,0,0,20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Foreground="{TemplateBinding Foreground}"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Name="Border" 
                                        Background="{TemplateBinding Background}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left" />
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" 
                           AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource GoldLighterBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ScrollBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <RepeatButton Grid.Row="0" Command="ScrollBar.LineUpCommand" Content="UP" Background="Black" Foreground="{StaticResource GoldBrush}" Width="18" Height="18">
                            <RepeatButton.ContentTemplate>
                                <DataTemplate>
                                    <Image Source="/Resources/Images/thin_prev.jpg"/>
                                </DataTemplate>
                            </RepeatButton.ContentTemplate>
                        </RepeatButton>
                        <Track Grid.Row="1" Name="PART_Track" IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Background="{StaticResource ShakoBrush}" BorderBrush="{StaticResource GoldBrush}" Foreground="Black"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Grid.Row="2" Command="ScrollBar.LineDownCommand" Content="DOWN" Background="Black" Foreground="{StaticResource GoldBrush}" Width="18" Height="18">
                            <RepeatButton.ContentTemplate>
                                <DataTemplate>
                                    <Image Source="/Resources/Images/thin_next.jpg"/>
                                </DataTemplate>
                            </RepeatButton.ContentTemplate>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OptionsTextBlockHeaderStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="{StaticResource BlizzMedium}"/>
        <Setter Property="Foreground" Value="{StaticResource GoldBrush}"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

</ResourceDictionary>